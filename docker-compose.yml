version: '3.1'
services:

  mongo:
    container_name: mongo
    image: mongo:4.0.10
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: offers
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    restart: always  #restart the container regardless of the exit status
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/  # mongodb://{mongo-image-username}:{mongo-image-password}@{mongo-image-name}:{port}

  redis:
    image: redis
    ports:
      - "63792:6379"
    restart: always
    container_name: redis

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"

  joboffers:
    container_name: joboffers
    build: .
#    image: 515505113800.dkr.ecr.eu-north-1.amazonaws.com/job-offers:latest
    restart: always
    ports:
      - '8000:8080'
    environment:
      MONGO_USER: admin
      MONGO_PASSWORD: admin
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_DB_NAME: offers
      MONGO_AUTH_SOURCE: admin
      REDIS_HOST: redis
      REDIS_PORT: 6379